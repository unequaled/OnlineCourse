p=13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084171
g=11717829880366207009516117596335367088558084999998952205599979459063929499736583746670572176471460312928594829675428279466566527115212748467589894601965568
h=3239475104050450443565264378728065788649097520952449527834792452971981976143292558073856937958553180532878928001494706097394108577585732452307673444020333

import math  # Use sqrt, floor
import gmpy2
from gmpy2 import powmod, t_mod

hash_table1 = set()
hash_table2 = set()
b = 2**20

for i in range(b):
	abc = t_mod(powmod(g,-1* i,p)*h,p)
	hash_table1.add(abc)
	if abc == 1514665690755317733976062484822790443518716440821123165374346884821466258735252188334799940590055744229602814470651184433499215002319025125450377832374754 :
		print "x1 = ", i

print "1111111111111"
temp = powmod(g,b,p)
print "temp = ", temp

for i in range(b):
	abc = powmod(temp,i,p)
	hash_table2.add(abc)
	if abc == 1514665690755317733976062484822790443518716440821123165374346884821466258735252188334799940590055744229602814470651184433499215002319025125450377832374754 :
		print "x0 = ", i
	
print hash_table1.intersection(hash_table2)

